---
import Carousel from "@components/Carousel.astro";
import Gallery from "@components/Gallery.astro";
import FlagDivider from "@components/FlagDivider.astro";
import Hero from "@components/Hero.astro";
import Layout from "@layouts/Layout.astro";
import CarTabs from "@components/CarTabs.astro";
import Card from "@components/Card.astro";
import Section from "@components/Section.astro";
import Stats from "@components/Stats.astro";
import { loadImageEntries, loadImageEntriesSimple } from "@utils/imageUtils";
import { texts, createCardContent } from "@utils/texts";

export const prerender = true;

// Image data
type Partner = {
  featured?: boolean;
  [key: string]: any;
};

// Partners
let partners: Partner[] = [];
let featuredPartners: Partner[] = [];
try {
  partners = await loadImageEntries("logos-partners-2425");
  featuredPartners = partners.filter((partner) => partner.featured === true);
  partners = [
    ...featuredPartners,
    ...partners.filter((partner) => partner.featured !== true),
  ];
  console.log(
    `‚úÖ Loaded ${partners.length} partners, ${featuredPartners.length} featured`
  );
} catch (error) {
  console.error("‚ùå Error loading partners data:", error);
  if (error instanceof Error) {
    console.error("Stack trace:", error.stack);
  }
  console.log("üîÑ Intentando m√©todo alternativo...");
  try {
    partners = await loadImageEntriesSimple("logos-partners-2425");
    featuredPartners = partners.filter((partner) => partner.featured === true);
    partners = [
      ...featuredPartners,
      ...partners.filter((partner) => partner.featured !== true),
    ];
    console.log(
      `‚úÖ Loaded ${partners.length} partners with alternative method, ${featuredPartners.length} featured`
    );
  } catch (altError) {
    console.error("‚ùå Error with alternative method:", altError);
  }
}

import imagesExample from "@assets/imagesExample.json";

// Car components data
import carComponents from "@assets/carComponents.json";
---

<Layout id={Astro.self.name}>
  <Hero />

  <FlagDivider />

  <Section id="partners-principal" className="min-h-[200px]">
    {
      featuredPartners.length > 0 ? (
        <Gallery
          items={featuredPartners}
          alt="Logos de socios destacados"
          className="w-full lg:w-3/4 justify-between"
        />
      ) : (
        <div class="w-full lg:w-3/4 flex items-center justify-center text-center">
          <p class="text-gray-500">Cargando socios destacados...</p>
        </div>
      )
    }
    <Stats className="w-full lg:w-1/4" />
  </Section>

  <Section id="team">
    <Card
      className="w-full lg:w-2/3"
      buttons={[
        {
          text: "√önete",
          href: "#contact",
          icon: "mdi:account-plus",
        },
      ]}
      content={createCardContent(texts.home.team)}
    />
    <div class="w-full lg:w-1/3 flex flex-col justify-center items-center">
      <Carousel items={imagesExample} id="team-carousel" />
    </div>
  </Section>

  <Section id="car">
    <Card
      className="w-full lg:w-1/3"
      content={createCardContent(texts.home.car)}
    />
    <CarTabs
      carComponents={carComponents}
      id="car-components"
      className="w-full lg:w-2/3 h-full"
    />
  </Section>

  <Section id="partners">
    {
      partners.length > 0 ? (
        <Gallery
          items={partners}
          alt="Logos de todos los socios"
          className="w-full lg:w-3/4 justify-center"
        />
      ) : (
        <div class="w-full lg:w-3/4 flex items-center justify-center text-center">
          <p class="text-gray-500">Cargando socios...</p>
        </div>
      )
    }
    <Card
      className="w-full lg:w-1/3"
      content={createCardContent(texts.home.contact)}
      buttons={[
        {
          text: "Patrocinio",
          icon: "mdi:account-multiple-plus",
          href: "#contact",
        },
      ]}
    />
  </Section>
</Layout>
