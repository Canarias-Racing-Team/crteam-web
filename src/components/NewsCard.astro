---
import Image from "astro/components/Image.astro";
import Buttons from "./Buttons.astro";
import { Icon } from "astro-icon/components";
import type { SectionSampleLinkType, NotionPageType } from "@types";

interface Props {
  noticia: NotionPageType;
  link?: SectionSampleLinkType;
  short?: boolean;
  className?: string;
}

const { noticia, short, link, className = "" } = Astro.props;
---

<div
  id={noticia.url}
  class={`card ${className} card-md md:card-lg bg-base-300 shadow`}
>
  {
    noticia.Imagen && (
      <figure class={`w-full ${short ? "h-48" : "h-64"} overflow-hidden`}>
        <Image
          src={noticia.Imagen}
          alt={noticia.Nombre}
          inferSize
          sizes={
            short
              ? "(max-width: 768px) 128px, 192px"
              : "(max-width: 768px) 192px, 256px"
          }
          class="object-cover"
          loading="eager"
        />
      </figure>
    )
  }

  <div class={`card-body w-full ${short ? "p-6" : ""}`}>
    <h2 class="card-title" aria-label={noticia.Nombre}>
      {noticia.Nombre}
    </h2>

    {
      noticia.Contenido &&
        (short && noticia.Contenido.length > 200
          ? `${noticia.Contenido.slice(0, 200)}...`
          : noticia.Contenido
        )
          .split("\n")
          .filter((line) => line.trim() !== "")
          .map((line) => <p class="text-base-content/80">{line}</p>)
    }

    <slot />
    <div class="card-actions justify-between place-items-center">
      <div class="flex flex-col gap-1">
        {
          noticia.Autor && (
            <div class="badge badge-soft">
              <Icon name="mdi:account" class="size-[1em] mr-1" />
              {noticia.Autor}
            </div>
          )
        }

        {
          noticia.Fecha && (
            <div class="badge badge-soft">
              <Icon name="mdi:calendar" class="size-[1em] mr-1" />
              {new Date(noticia.Fecha).toLocaleDateString("es-ES", {
                year: "numeric",
                month: short ? "short" : "long",
                day: "numeric",
              })}
            </div>
          )
        }
      </div>

      {
        link && (
          <Buttons
            buttons={[
              { text: link.text, href: link.href, icon: "mdi:arrow-right" },
            ]}
            className="justify-end"
          />
        )
      }
    </div>
  </div>
</div>
