---
import Image from "astro/components/Image.astro";
import { Icon } from "astro-icon/components";

type CarouselItem = {
  src: string;
  alt?: string;
  name?: string;
  icon?: string;
  brief?: string;
};

const { items = [], id, units } = Astro.props;
// Add default item if no matching units are found
const defaultAvatar = {
  src: "https://img.daisyui.com/images/profile/demo/batperson@192.webp",
  alt: "Avatar por defecto",
};
const count = units ?? items.length;
const filledItems: CarouselItem[] = [
  ...items.slice(0, count),
  ...Array(Math.max(0, count - items.length)).fill(defaultAvatar),
];
---

{
  filledItems.length > 0 && (
    <>
      <div class="carousel w-full" id={id}>
        {/* Carousel items */}
        {filledItems.map((image: CarouselItem, i: number) => {
          const slideId = `slide${i + 1}`;
          const prevId = `#slide${((i - 1 + filledItems.length) % filledItems.length) + 1}`;
          const nextId = `#slide${((i + 1) % filledItems.length) + 1}`;
          return (
            <div id={slideId} class="carousel-item relative w-full items-center justify-center">
              <Image
                alt={image.alt ?? `Imagen ${i + 1}`}
                class="w-max rounded-xl object-cover m-2"
                src={image.src}
                inferSize={true}
              />
              <div
                class="absolute top-1/2 right-5 left-5 flex -translate-y-1/2 transform justify-between"
                role="group"
                aria-label="Carousel navigation"
              >
                <a
                  href={prevId}
                  class="btn btn-circle"
                  aria-label="Previous slide"
                >
                  <Icon name="mdi:chevron-left" class="h-5 w-5" />
                </a>
                <a href={nextId} class="btn btn-circle" aria-label="Next slide">
                  <Icon name="mdi:chevron-right" class="h-5 w-5" />
                </a>
              </div>
            </div>
          );
        })}
      </div>
      <div class="join py-2 flex justify-center" id="carousel-pagination">
        {filledItems.map((_, i) => (
          <a
            href={`#slide${i + 1}`}
            class="btn btn-sm join-item"
            id={`carousel-btn-${i + 1}`}
            aria-label={`Go to slide ${i + 1}`}
          >
            {i + 1}
          </a>
        ))}
      </div>
    </>
  )
}
<script is:inline>
  // Mantiene el color primario en el botón activo
  function setActiveCarouselBtn(selectedIdx = null) {
    const total = document.querySelectorAll('[id^="carousel-btn-"]').length;
    let idx = selectedIdx;
    if (idx === null) {
      const hash = window.location.hash || "#slide1";
      for (let i = 1; i <= total; i++) {
        if (hash === `#slide${i}` || (!window.location.hash && i === 1)) {
          idx = i;
          break;
        }
      }
      if (!idx) idx = 1;
    }
    for (let i = 1; i <= total; i++) {
      const btn = document.getElementById(`carousel-btn-${i}`);
      if (btn) {
        if (i === idx) {
          btn.classList.add("btn-primary");
          btn.setAttribute("aria-current", "page");
        } else {
          btn.classList.remove("btn-primary");
          btn.removeAttribute("aria-current");
        }
      }
    }
  }
  window.addEventListener("hashchange", () => setActiveCarouselBtn());
  window.addEventListener("DOMContentLoaded", () =>
    setTimeout(() => setActiveCarouselBtn(), 10)
  );
  // Al hacer clic en flechas o números, cambia la imagen sin mover el scroll ni el hash
  document.addEventListener("click", function (e) {
    const target = e.target.closest('a[href^="#slide"]');
    if (target) {
      e.preventDefault();
      const hash = target.getAttribute("href");
      if (hash) {
        // Oculta todos los slides
        document.querySelectorAll(".carousel-item").forEach((item) => {
          item.style.display = "none";
        });
        // Muestra solo el slide seleccionado
        const slide = document.querySelector(hash);
        if (slide) {
          slide.style.display = "";
        }
        // Actualiza los botones activos correctamente
        const idx = parseInt(hash.replace("#slide", ""), 10);
        setActiveCarouselBtn(idx);
      }
    }
  });

  // Mostrar solo el slide activo al cargar la página
  function showActiveSlideOnLoad() {
    const hash = window.location.hash || "#slide1";
    document.querySelectorAll(".carousel-item").forEach((item) => {
      item.style.display = "none";
    });
    const slide = document.querySelector(hash);
    if (slide) {
      slide.style.display = "";
    }
  }
  window.addEventListener("DOMContentLoaded", showActiveSlideOnLoad);
  window.addEventListener("hashchange", showActiveSlideOnLoad);
</script>
